{"version":3,"file":"static/js/412.dd2ae7f3.chunk.js","mappings":"4NAAaA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACpC,OACE,0BACE,kBACEC,KAAK,OACLD,MAAOA,EACPD,SAAU,SAAAG,GAAC,OAAIH,EAASG,EAAEC,OAAOH,MAAtB,KAIlB,E,iBCLYI,EAAY,WAAO,IAAD,EAC7B,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GACvCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAeC,KAAKV,EACrB,GAAE,CAACD,IAEJ,IAIMY,GAAmBC,EAAAA,EAAAA,UAAQ,WAC/B,OAAOb,EAAUc,QAAO,SAAAC,GAAQ,OAC9BA,EAASC,KAAKC,cAAcC,SAASb,EAAOY,cAAcE,OAD5B,GAGjC,GAAE,CAACnB,EAAWK,IAEf,OACE,2BACE,UAAC,EAAAe,SAAD,CAAUC,SAAU,KAApB,WACE,SAAC7B,EAAD,CAAWE,MAAOW,EAAQZ,SAbX,SAAAC,GACnBU,EAA0B,KAAVV,EAAe,CAAEoB,OAAQpB,GAAU,CAAC,EACrD,KAYK,wBACGkB,EAAiBU,OAAS,GACzBV,EAAiBW,KAAI,gBAAGC,EAAH,EAAGA,GAAIR,EAAP,EAAOA,KAAP,OACnB,yBACE,SAAC,KAAD,CAAMS,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMpB,GAAlC,SACGS,KAFIQ,EADU,UAWhC,C","sources":["components/SearchBox/SearchBox.js","pages/Customers.js"],"sourcesContent":["export const SearchBox = ({ onChange, value }) => {\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </div>\n  );\n};\n","import { useEffect, useState, useMemo, Suspense } from 'react';\nimport { getCustomers } from 'fakeApi';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nexport const Customers = () => {\n  const [customers, setCustomers] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const params = searchParams.get('filter') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    getCustomers().then(setCustomers);\n  }, [customers]);\n\n  const changeFilter = value => {\n    setSearchParams(value !== '' ? { filter: value } : {});\n  };\n\n  const visibleCustomers = useMemo(() => {\n    return customers.filter(customer =>\n      customer.name.toLowerCase().includes(params.toLowerCase().trim())\n    );\n  }, [customers, params]);\n\n  return (\n    <main>\n      <Suspense fallback={null}>\n        <SearchBox value={params} onChange={changeFilter} />\n        <ul>\n          {visibleCustomers.length > 0 &&\n            visibleCustomers.map(({ id, name }) => (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  {name}\n                </Link>\n              </li>\n            ))}\n        </ul>\n      </Suspense>\n    </main>\n  );\n};\n"],"names":["SearchBox","onChange","value","type","e","target","Customers","useState","customers","setCustomers","useSearchParams","searchParams","setSearchParams","params","get","location","useLocation","useEffect","getCustomers","then","visibleCustomers","useMemo","filter","customer","name","toLowerCase","includes","trim","Suspense","fallback","length","map","id","to","state","from"],"sourceRoot":""}